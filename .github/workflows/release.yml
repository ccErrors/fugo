name: release

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            cc_prefix: x86_64-linux-musl
          - arch: arm64
            cc_prefix: aarch64-linux-musl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y \
            zip \
            curl

      - name: Setup version
        run: |
          echo "VERSION=${GITHUB_REF_NAME:1}" >> $GITHUB_ENV
          echo "OUT_NAME=fugo-linux-${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Download musl toolchain
        shell: bash
        run: |
          curl -L "https://musl.cc/${{ matrix.cc_prefix }}-cross.tgz" -o toolchain.tgz
          mkdir -p toolchain
          tar -xzf toolchain.tgz -C toolchain
          rm -f toolchain.tgz

      - name: Build Fugo
        env:
          GOARCH: ${{ matrix.arch }}
          GOOS: linux
          CGO_ENABLED: 1
          CC: ${{ github.workspace }}/toolchain/${{ matrix.cc_prefix }}-cross/bin/${{ matrix.cc_prefix }}-gcc
        run: |
          go build \
            -o ${{ env.OUT_NAME }} \
            -ldflags "-s -w -linkmode external -extldflags -static -X main.Version=${{ env.VERSION }}" \
            -trimpath \
            -v \
            ./cmd/fugo

      - name: Zip
        shell: bash
        run: |
          zip -r ${{ env.OUT_NAME }}.zip ${{ env.OUT_NAME }}

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            ${{ env.OUT_NAME }}.zip
